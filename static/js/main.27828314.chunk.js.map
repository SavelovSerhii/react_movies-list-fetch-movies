{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","fetch","then","response","json","FindMovie","useState","setTitle","setMovie","titleError","setTitleError","a","newMovie","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","searchMovie","App","every","addedMovie","addedMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,6BCfd,SAASC,EAASC,GACvB,OAAOC,MAAM,8CAAD,OAA+CD,IACxDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCQxB,IAAMC,EAA6B,SAAClB,GACzC,MAA0BmB,mBAAS,IAAnC,mBAAON,EAAP,KAAcO,EAAd,KACA,EAA0BD,mBAAS,CACjCf,OAAQ,GACRE,MAAO,GACPC,KAAM,GACNI,OAAQ,KAJV,mBAAOV,EAAP,KAAcoB,EAAd,KAMA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KARmD,4CAUnD,4BAAAC,EAAA,sEACyBZ,EAASC,GADlC,QACQY,EADR,QAGed,OACXU,EAASI,GAETF,GAAc,GANlB,4CAVmD,sBAoBnD,OACE,qCACE,uBACErB,UAAU,aACVwB,SAAU,SAACC,GACTA,EAAMC,iBACNP,EAAS,CACPjB,OAAQ,GACRE,MAAO,GACPC,KAAM,GACNI,OAAQ,KAEVS,EAAS,IACTpB,EAAMyB,SAASxB,IAXnB,UAcE,sBAAKC,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,wBAEE,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAS,gBAAWoB,GAAc,aAClCW,MAAOpB,EACPqB,SAAU,SAACP,GACTP,EAASO,EAAMQ,OAAOF,OACtBV,GAAc,WAKrBD,GACC,mBAAGpB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACVkC,QAAS,kBAjE8B,0CAiExBC,IAHjB,4BASF,qBAAKnC,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,EAAMU,QAAU,cAAC,EAAD,CAAWV,MAAOA,WCzF9BqC,EAAgB,WAE3B,MAA2BnB,mBAAkB,IAA7C,mBAAOV,EAAP,KAAegB,EAAf,KAcA,OACE,sBAAKvB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWuB,SAZA,SAACxB,GACZQ,EAAO8B,OAAM,SAAAC,GAAU,OAAIA,EAAW7B,SAAWV,EAAMU,WACzDc,GAAS,SAAAgB,GAAW,4BAAQA,GAAR,CAAqBxC,gBCb/CyC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.27828314.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export function getMovie(title: string): Promise<Movie> {\n  return fetch(`https://www.omdbapi.com/?apikey=7a422092&t=${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  newMovie: (movie: Movie) => void\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n  const [titleError, setTitleError] = useState(false);\n\n  async function searchMovie() {\n    const newMovie = await getMovie(title);\n\n    if (newMovie.imdbID) {\n      setMovie(newMovie);\n    } else {\n      setTitleError(true);\n    }\n  }\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          setMovie({\n            Poster: '',\n            Title: '',\n            Plot: '',\n            imdbID: '',\n          });\n          setTitle('');\n          props.newMovie(movie);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={`input ${titleError && 'is-danger'}`}\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                  setTitleError(false);\n                }}\n              />\n            </div>\n          </label>\n          {titleError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => searchMovie()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie.imdbID && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  // const movies: Movie[] = [];\n  const [movies, newMovie] = useState<Movie[]>([]);\n\n  /* const addMovie = (movie: Movie) => {\n    movies.push(movie);\n    // eslint-disable-next-line no-console\n    console.log(movies);\n  }; */\n\n  const addMovie = (movie: Movie) => {\n    if (movies.every(addedMovie => addedMovie.imdbID !== movie.imdbID)) {\n      newMovie(addedMovies => [...addedMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie newMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}